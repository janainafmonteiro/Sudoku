import java.util.Random;

public class Main {
    public static void inicializarQuadrado(int[][] tabuleiro){
        int numero = 1;
        for(int linha = 0; linha < tabuleiro.length; linha++){
            for(int coluna = 0; coluna < tabuleiro.length; coluna++){
                tabuleiro[linha][coluna]= numero;
                numero++;
            }
        }
    }
    public static void aleatorizarQuadrado(int[][] organizado) {
        inicializarQuadrado(organizado);
        Random aleatorio = new Random();
        for(int i=0;i<100;i++){
            int linha = aleatorio.nextInt(3);
            int coluna = aleatorio.nextInt(3);
            int linhaDois = aleatorio.nextInt(3);
            int colunaDois = aleatorio.nextInt(3);

            int aux = organizado[linha][coluna];
            organizado[linha][coluna] = organizado[linhaDois][colunaDois];
            organizado[linhaDois][colunaDois] = aux;
        }
    }

    public static void quadradosOrganizacao(int[][] tabuleiro, int indicesTabuleiro) {
        int[][] quadradoTabuleiro = new int[3][3];
        aleatorizarQuadrado(quadradoTabuleiro);
        for(int linha = 0, linhaPrincipal = indicesTabuleiro; linha < 3; linha++, linhaPrincipal++){
            for(int coluna = 0, colunaPrincipal = indicesTabuleiro; coluna < 3; coluna++, colunaPrincipal++){
                tabuleiro[linhaPrincipal][colunaPrincipal]= quadradoTabuleiro[linha][coluna];
            }
        }
    }

    public static void organizarQuadrados(int [][] tabuleiro) {

        quadradosOrganizacao(tabuleiro, 0);
        quadradosOrganizacao(tabuleiro, 3);
        quadradosOrganizacao(tabuleiro, 6);


    }
    public static void organizarTabuleiro(int[][] baseTabuleiro){
        organizarQuadrados(baseTabuleiro);

        Random aleatorio = new Random();
        for(int i=0;i<3;i++){
            for(int j=3;j<6;j++){
                if(baseTabuleiro[i][j]==0){
                    do {
                        baseTabuleiro[i][j]= aleatorio.nextInt(9)+1;
                    }while(!verificarQuadrados(baseTabuleiro, baseTabuleiro[i][j], i, j) && !verificarLinha(baseTabuleiro, baseTabuleiro[i][j], i) && !verificarColuna(baseTabuleiro, baseTabuleiro[i][j], j));

                }
            }
        }

    }
    public static boolean verificarQuadrados(int[][] tabuleiro, int numero, int linha, int coluna) {
        boolean verif= true;
        int repetido=0;

        for(int i = 0; i < 3; i++){
            for(int j = 3; j < 6; j++){
                if(numero== tabuleiro[i][j]) {
                    repetido++;
                    if(repetido>1) {
                        verif= false;
                        break;
                    }
                }


            }
        }


        return verif;
    }

    public static boolean verificarLinha(int[][] tabuleiro, int numero, int linha){
        boolean verif= true;
        int repetido=0;
        for(int i=0;i<tabuleiro.length;i++){
            if(tabuleiro[linha][i]==numero){
                repetido++;
                if(repetido>1) {
                    verif= false;
                    break;
                }
            }
        }

        return verif;
    }

    public static boolean verificarColuna(int[][] tabuleiro, int numero, int coluna){
        boolean verif= true;
        int repetido=0;
        for(int i=0;i<tabuleiro.length;i++){
            if(tabuleiro[i][coluna]==numero){
                repetido++;
                if(repetido>1) {
                    verif= false;
                    break;
                }
            }
        }

        return verif;
    }
    public static void main(String[] args) {
        int[][] tabuleiro = new int[9][9];
        organizarTabuleiro(tabuleiro);
        for(int i=0;i<tabuleiro.length;i++){
            if(i!=0 && i%3==0){
                System.out.println();
            }
            for(int j=0;j<tabuleiro[0].length;j++){
                if(j!=0 && j%3==0){
                    System.out.print(" ");
                }
                System.out.print(tabuleiro[i][j] + "\t");

            }
            System.out.println("\n");

        }
    }

}
