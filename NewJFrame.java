/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import javax.swing.JOptionPane;
/**
 *
 * @author janai
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        quadradoA2 = new javax.swing.JTextField();
        quadradoA3 = new javax.swing.JTextField();
        quadradoA1 = new javax.swing.JTextField();
        quadradoA5 = new javax.swing.JTextField();
        quadradoA6 = new javax.swing.JTextField();
        quadradoA4 = new javax.swing.JTextField();
        quadradoA8 = new javax.swing.JTextField();
        quadradoA9 = new javax.swing.JTextField();
        quadradoA7 = new javax.swing.JTextField();
        quadradoD2 = new javax.swing.JTextField();
        quadradoD3 = new javax.swing.JTextField();
        quadradoD1 = new javax.swing.JTextField();
        quadradoD5 = new javax.swing.JTextField();
        quadradoD6 = new javax.swing.JTextField();
        quadradoD4 = new javax.swing.JTextField();
        quadradoD8 = new javax.swing.JTextField();
        quadradoD9 = new javax.swing.JTextField();
        quadradoD7 = new javax.swing.JTextField();
        quadradoG2 = new javax.swing.JTextField();
        quadradoG3 = new javax.swing.JTextField();
        quadradoG1 = new javax.swing.JTextField();
        quadradoG5 = new javax.swing.JTextField();
        quadradoG6 = new javax.swing.JTextField();
        quadradoG4 = new javax.swing.JTextField();
        quadradoG8 = new javax.swing.JTextField();
        quadradoG9 = new javax.swing.JTextField();
        quadradoG7 = new javax.swing.JTextField();
        quadradoE2 = new javax.swing.JTextField();
        quadradoE3 = new javax.swing.JTextField();
        quadradoE1 = new javax.swing.JTextField();
        quadradoE5 = new javax.swing.JTextField();
        quadradoE6 = new javax.swing.JTextField();
        quadradoE4 = new javax.swing.JTextField();
        quadradoE8 = new javax.swing.JTextField();
        quadradoE9 = new javax.swing.JTextField();
        quadradoE7 = new javax.swing.JTextField();
        quadradoH2 = new javax.swing.JTextField();
        quadradoB2 = new javax.swing.JTextField();
        quadradoH3 = new javax.swing.JTextField();
        quadradoB3 = new javax.swing.JTextField();
        quadradoH1 = new javax.swing.JTextField();
        quadradoB1 = new javax.swing.JTextField();
        quadradoH5 = new javax.swing.JTextField();
        quadradoB5 = new javax.swing.JTextField();
        quadradoH6 = new javax.swing.JTextField();
        quadradoB6 = new javax.swing.JTextField();
        quadradoH4 = new javax.swing.JTextField();
        quadradoB4 = new javax.swing.JTextField();
        quadradoH8 = new javax.swing.JTextField();
        quadradoB8 = new javax.swing.JTextField();
        quadradoB9 = new javax.swing.JTextField();
        quadradoH9 = new javax.swing.JTextField();
        quadradoH7 = new javax.swing.JTextField();
        quadradoB7 = new javax.swing.JTextField();
        quadradoF2 = new javax.swing.JTextField();
        quadradoF3 = new javax.swing.JTextField();
        quadradoF1 = new javax.swing.JTextField();
        quadradoF5 = new javax.swing.JTextField();
        quadradoF6 = new javax.swing.JTextField();
        quadradoF4 = new javax.swing.JTextField();
        quadradoF8 = new javax.swing.JTextField();
        quadradoF9 = new javax.swing.JTextField();
        quadradoF7 = new javax.swing.JTextField();
        quadradoI2 = new javax.swing.JTextField();
        quadradoC2 = new javax.swing.JTextField();
        quadradoI3 = new javax.swing.JTextField();
        quadradoC3 = new javax.swing.JTextField();
        quadradoI1 = new javax.swing.JTextField();
        quadradoC1 = new javax.swing.JTextField();
        quadradoI5 = new javax.swing.JTextField();
        quadradoC5 = new javax.swing.JTextField();
        quadradoI6 = new javax.swing.JTextField();
        quadradoC6 = new javax.swing.JTextField();
        quadradoI4 = new javax.swing.JTextField();
        quadradoC4 = new javax.swing.JTextField();
        quadradoI8 = new javax.swing.JTextField();
        quadradoC8 = new javax.swing.JTextField();
        quadradoC9 = new javax.swing.JTextField();
        quadradoI9 = new javax.swing.JTextField();
        quadradoI7 = new javax.swing.JTextField();
        quadradoC7 = new javax.swing.JTextField();
        numeroUsuario = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        quadradoA2.setEditable(false);
        quadradoA2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoA2.setToolTipText("");
        quadradoA2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoA2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoA2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoA2MouseClicked(evt);
            }
        });

        quadradoA3.setEditable(false);
        quadradoA3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoA3.setToolTipText("");
        quadradoA3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoA3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoA3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoA3MouseClicked(evt);
            }
        });

        quadradoA1.setEditable(false);
        quadradoA1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoA1.setToolTipText("");
        quadradoA1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoA1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoA1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoA1MouseClicked(evt);
            }
        });
        quadradoA1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                quadradoA1InputMethodTextChanged(evt);
            }
        });
        quadradoA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quadradoA1ActionPerformed(evt);
            }
        });

        quadradoA5.setEditable(false);
        quadradoA5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoA5.setToolTipText("");
        quadradoA5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoA5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoA5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoA5MouseClicked(evt);
            }
        });

        quadradoA6.setEditable(false);
        quadradoA6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoA6.setToolTipText("");
        quadradoA6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoA6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoA6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoA6MouseClicked(evt);
            }
        });

        quadradoA4.setEditable(false);
        quadradoA4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoA4.setToolTipText("");
        quadradoA4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoA4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoA4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoA4MouseClicked(evt);
            }
        });

        quadradoA8.setEditable(false);
        quadradoA8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoA8.setToolTipText("");
        quadradoA8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoA8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoA8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoA8MouseClicked(evt);
            }
        });

        quadradoA9.setEditable(false);
        quadradoA9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoA9.setToolTipText("");
        quadradoA9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoA9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoA9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoA9MouseClicked(evt);
            }
        });

        quadradoA7.setEditable(false);
        quadradoA7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoA7.setToolTipText("");
        quadradoA7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoA7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoA7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoA7MouseClicked(evt);
            }
        });

        quadradoD2.setEditable(false);
        quadradoD2.setBackground(new java.awt.Color(200, 200, 200));
        quadradoD2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoD2.setToolTipText("");
        quadradoD2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoD2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoD2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoD2MouseClicked(evt);
            }
        });

        quadradoD3.setEditable(false);
        quadradoD3.setBackground(new java.awt.Color(200, 200, 200));
        quadradoD3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoD3.setToolTipText("");
        quadradoD3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoD3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoD3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoD3MouseClicked(evt);
            }
        });

        quadradoD1.setEditable(false);
        quadradoD1.setBackground(new java.awt.Color(200, 200, 200));
        quadradoD1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoD1.setToolTipText("");
        quadradoD1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoD1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoD1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoD1MouseClicked(evt);
            }
        });

        quadradoD5.setEditable(false);
        quadradoD5.setBackground(new java.awt.Color(200, 200, 200));
        quadradoD5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoD5.setToolTipText("");
        quadradoD5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoD5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoD5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoD5MouseClicked(evt);
            }
        });

        quadradoD6.setEditable(false);
        quadradoD6.setBackground(new java.awt.Color(200, 200, 200));
        quadradoD6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoD6.setToolTipText("");
        quadradoD6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoD6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoD6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoD6MouseClicked(evt);
            }
        });

        quadradoD4.setEditable(false);
        quadradoD4.setBackground(new java.awt.Color(200, 200, 200));
        quadradoD4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoD4.setToolTipText("");
        quadradoD4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoD4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoD4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoD4MouseClicked(evt);
            }
        });

        quadradoD8.setEditable(false);
        quadradoD8.setBackground(new java.awt.Color(200, 200, 200));
        quadradoD8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoD8.setToolTipText("");
        quadradoD8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoD8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoD8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoD8MouseClicked(evt);
            }
        });

        quadradoD9.setEditable(false);
        quadradoD9.setBackground(new java.awt.Color(200, 200, 200));
        quadradoD9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoD9.setToolTipText("");
        quadradoD9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoD9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoD9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoD9MouseClicked(evt);
            }
        });

        quadradoD7.setEditable(false);
        quadradoD7.setBackground(new java.awt.Color(200, 200, 200));
        quadradoD7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoD7.setToolTipText("");
        quadradoD7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoD7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoD7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoD7MouseClicked(evt);
            }
        });

        quadradoG2.setEditable(false);
        quadradoG2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoG2.setToolTipText("");
        quadradoG2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoG2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoG2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoG2MouseClicked(evt);
            }
        });

        quadradoG3.setEditable(false);
        quadradoG3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoG3.setToolTipText("");
        quadradoG3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoG3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoG3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoG3MouseClicked(evt);
            }
        });

        quadradoG1.setEditable(false);
        quadradoG1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoG1.setToolTipText("");
        quadradoG1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoG1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoG1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoG1MouseClicked(evt);
            }
        });

        quadradoG5.setEditable(false);
        quadradoG5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoG5.setToolTipText("");
        quadradoG5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoG5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoG5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoG5MouseClicked(evt);
            }
        });

        quadradoG6.setEditable(false);
        quadradoG6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoG6.setToolTipText("");
        quadradoG6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoG6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoG6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoG6MouseClicked(evt);
            }
        });

        quadradoG4.setEditable(false);
        quadradoG4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoG4.setToolTipText("");
        quadradoG4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoG4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoG4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoG4MouseClicked(evt);
            }
        });

        quadradoG8.setEditable(false);
        quadradoG8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoG8.setToolTipText("");
        quadradoG8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoG8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoG8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoG8MouseClicked(evt);
            }
        });

        quadradoG9.setEditable(false);
        quadradoG9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoG9.setToolTipText("");
        quadradoG9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoG9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoG9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoG9MouseClicked(evt);
            }
        });

        quadradoG7.setEditable(false);
        quadradoG7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoG7.setToolTipText("");
        quadradoG7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoG7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoG7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoG7MouseClicked(evt);
            }
        });

        quadradoE2.setEditable(false);
        quadradoE2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoE2.setToolTipText("");
        quadradoE2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoE2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoE2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoE2MouseClicked(evt);
            }
        });

        quadradoE3.setEditable(false);
        quadradoE3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoE3.setToolTipText("");
        quadradoE3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoE3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoE3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoE3MouseClicked(evt);
            }
        });

        quadradoE1.setEditable(false);
        quadradoE1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoE1.setToolTipText("");
        quadradoE1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoE1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoE1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoE1MouseClicked(evt);
            }
        });

        quadradoE5.setEditable(false);
        quadradoE5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoE5.setToolTipText("");
        quadradoE5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoE5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoE5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoE5MouseClicked(evt);
            }
        });

        quadradoE6.setEditable(false);
        quadradoE6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoE6.setToolTipText("");
        quadradoE6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoE6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoE6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoE6MouseClicked(evt);
            }
        });

        quadradoE4.setEditable(false);
        quadradoE4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoE4.setToolTipText("");
        quadradoE4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoE4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoE4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoE4MouseClicked(evt);
            }
        });

        quadradoE8.setEditable(false);
        quadradoE8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoE8.setToolTipText("");
        quadradoE8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoE8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoE8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoE8MouseClicked(evt);
            }
        });

        quadradoE9.setEditable(false);
        quadradoE9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoE9.setToolTipText("");
        quadradoE9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoE9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoE9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoE9MouseClicked(evt);
            }
        });

        quadradoE7.setEditable(false);
        quadradoE7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoE7.setToolTipText("");
        quadradoE7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoE7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoE7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoE7MouseClicked(evt);
            }
        });

        quadradoH2.setEditable(false);
        quadradoH2.setBackground(new java.awt.Color(200, 200, 200));
        quadradoH2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoH2.setToolTipText("");
        quadradoH2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoH2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoH2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoH2MouseClicked(evt);
            }
        });

        quadradoB2.setEditable(false);
        quadradoB2.setBackground(new java.awt.Color(200, 200, 200));
        quadradoB2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoB2.setToolTipText("");
        quadradoB2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoB2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoB2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoB2MouseClicked(evt);
            }
        });

        quadradoH3.setEditable(false);
        quadradoH3.setBackground(new java.awt.Color(200, 200, 200));
        quadradoH3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoH3.setToolTipText("");
        quadradoH3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoH3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoH3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoH3MouseClicked(evt);
            }
        });

        quadradoB3.setEditable(false);
        quadradoB3.setBackground(new java.awt.Color(200, 200, 200));
        quadradoB3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoB3.setToolTipText("");
        quadradoB3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoB3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoB3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoB3MouseClicked(evt);
            }
        });

        quadradoH1.setEditable(false);
        quadradoH1.setBackground(new java.awt.Color(200, 200, 200));
        quadradoH1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoH1.setToolTipText("");
        quadradoH1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoH1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoH1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoH1MouseClicked(evt);
            }
        });

        quadradoB1.setEditable(false);
        quadradoB1.setBackground(new java.awt.Color(200, 200, 200));
        quadradoB1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoB1.setToolTipText("");
        quadradoB1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoB1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoB1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoB1MouseClicked(evt);
            }
        });

        quadradoH5.setEditable(false);
        quadradoH5.setBackground(new java.awt.Color(200, 200, 200));
        quadradoH5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoH5.setToolTipText("");
        quadradoH5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoH5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoH5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoH5MouseClicked(evt);
            }
        });

        quadradoB5.setEditable(false);
        quadradoB5.setBackground(new java.awt.Color(200, 200, 200));
        quadradoB5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoB5.setToolTipText("");
        quadradoB5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoB5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoB5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoB5MouseClicked(evt);
            }
        });

        quadradoH6.setEditable(false);
        quadradoH6.setBackground(new java.awt.Color(200, 200, 200));
        quadradoH6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoH6.setToolTipText("");
        quadradoH6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoH6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoH6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoH6MouseClicked(evt);
            }
        });

        quadradoB6.setEditable(false);
        quadradoB6.setBackground(new java.awt.Color(200, 200, 200));
        quadradoB6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoB6.setToolTipText("");
        quadradoB6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoB6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoB6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoB6MouseClicked(evt);
            }
        });

        quadradoH4.setEditable(false);
        quadradoH4.setBackground(new java.awt.Color(200, 200, 200));
        quadradoH4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoH4.setToolTipText("");
        quadradoH4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoH4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoH4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoH4MouseClicked(evt);
            }
        });

        quadradoB4.setEditable(false);
        quadradoB4.setBackground(new java.awt.Color(200, 200, 200));
        quadradoB4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoB4.setToolTipText("");
        quadradoB4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoB4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoB4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoB4MouseClicked(evt);
            }
        });

        quadradoH8.setEditable(false);
        quadradoH8.setBackground(new java.awt.Color(200, 200, 200));
        quadradoH8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoH8.setToolTipText("");
        quadradoH8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoH8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoH8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoH8MouseClicked(evt);
            }
        });

        quadradoB8.setEditable(false);
        quadradoB8.setBackground(new java.awt.Color(200, 200, 200));
        quadradoB8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoB8.setToolTipText("");
        quadradoB8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoB8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoB8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoB8MouseClicked(evt);
            }
        });

        quadradoB9.setEditable(false);
        quadradoB9.setBackground(new java.awt.Color(200, 200, 200));
        quadradoB9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoB9.setToolTipText("");
        quadradoB9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoB9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoB9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoB9MouseClicked(evt);
            }
        });

        quadradoH9.setEditable(false);
        quadradoH9.setBackground(new java.awt.Color(200, 200, 200));
        quadradoH9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoH9.setToolTipText("");
        quadradoH9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoH9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoH9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoH9MouseClicked(evt);
            }
        });

        quadradoH7.setEditable(false);
        quadradoH7.setBackground(new java.awt.Color(200, 200, 200));
        quadradoH7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoH7.setToolTipText("");
        quadradoH7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoH7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoH7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoH7MouseClicked(evt);
            }
        });

        quadradoB7.setEditable(false);
        quadradoB7.setBackground(new java.awt.Color(200, 200, 200));
        quadradoB7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoB7.setToolTipText("");
        quadradoB7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoB7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoB7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoB7MouseClicked(evt);
            }
        });

        quadradoF2.setEditable(false);
        quadradoF2.setBackground(new java.awt.Color(200, 200, 200));
        quadradoF2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoF2.setToolTipText("");
        quadradoF2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoF2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoF2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoF2MouseClicked(evt);
            }
        });

        quadradoF3.setEditable(false);
        quadradoF3.setBackground(new java.awt.Color(200, 200, 200));
        quadradoF3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoF3.setToolTipText("");
        quadradoF3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoF3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoF3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoF3MouseClicked(evt);
            }
        });

        quadradoF1.setEditable(false);
        quadradoF1.setBackground(new java.awt.Color(200, 200, 200));
        quadradoF1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoF1.setToolTipText("");
        quadradoF1.setActionCommand("<Not Set>");
        quadradoF1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoF1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoF1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoF1MouseClicked(evt);
            }
        });

        quadradoF5.setEditable(false);
        quadradoF5.setBackground(new java.awt.Color(200, 200, 200));
        quadradoF5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoF5.setToolTipText("");
        quadradoF5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoF5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoF5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoF5MouseClicked(evt);
            }
        });

        quadradoF6.setEditable(false);
        quadradoF6.setBackground(new java.awt.Color(200, 200, 200));
        quadradoF6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoF6.setToolTipText("");
        quadradoF6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoF6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoF6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoF6MouseClicked(evt);
            }
        });

        quadradoF4.setEditable(false);
        quadradoF4.setBackground(new java.awt.Color(200, 200, 200));
        quadradoF4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoF4.setToolTipText("");
        quadradoF4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoF4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoF4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoF4MouseClicked(evt);
            }
        });

        quadradoF8.setEditable(false);
        quadradoF8.setBackground(new java.awt.Color(200, 200, 200));
        quadradoF8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoF8.setToolTipText("");
        quadradoF8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoF8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoF8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoF8MouseClicked(evt);
            }
        });

        quadradoF9.setEditable(false);
        quadradoF9.setBackground(new java.awt.Color(200, 200, 200));
        quadradoF9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoF9.setToolTipText("");
        quadradoF9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoF9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoF9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoF9MouseClicked(evt);
            }
        });

        quadradoF7.setEditable(false);
        quadradoF7.setBackground(new java.awt.Color(200, 200, 200));
        quadradoF7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoF7.setToolTipText("");
        quadradoF7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoF7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoF7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoF7MouseClicked(evt);
            }
        });

        quadradoI2.setEditable(false);
        quadradoI2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoI2.setToolTipText("");
        quadradoI2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoI2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoI2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoI2MouseClicked(evt);
            }
        });

        quadradoC2.setEditable(false);
        quadradoC2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoC2.setToolTipText("");
        quadradoC2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoC2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoC2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoC2MouseClicked(evt);
            }
        });

        quadradoI3.setEditable(false);
        quadradoI3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoI3.setToolTipText("");
        quadradoI3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoI3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoI3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoI3MouseClicked(evt);
            }
        });

        quadradoC3.setEditable(false);
        quadradoC3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoC3.setToolTipText("");
        quadradoC3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoC3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoC3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoC3MouseClicked(evt);
            }
        });

        quadradoI1.setEditable(false);
        quadradoI1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoI1.setToolTipText("");
        quadradoI1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoI1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoI1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoI1MouseClicked(evt);
            }
        });

        quadradoC1.setEditable(false);
        quadradoC1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoC1.setToolTipText("");
        quadradoC1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoC1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoC1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoC1MouseClicked(evt);
            }
        });

        quadradoI5.setEditable(false);
        quadradoI5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoI5.setToolTipText("");
        quadradoI5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoI5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoI5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoI5MouseClicked(evt);
            }
        });

        quadradoC5.setEditable(false);
        quadradoC5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoC5.setToolTipText("");
        quadradoC5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoC5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoC5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoC5MouseClicked(evt);
            }
        });

        quadradoI6.setEditable(false);
        quadradoI6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoI6.setToolTipText("");
        quadradoI6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoI6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoI6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoI6MouseClicked(evt);
            }
        });

        quadradoC6.setEditable(false);
        quadradoC6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoC6.setToolTipText("");
        quadradoC6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoC6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoC6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoC6MouseClicked(evt);
            }
        });

        quadradoI4.setEditable(false);
        quadradoI4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoI4.setToolTipText("");
        quadradoI4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoI4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoI4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoI4MouseClicked(evt);
            }
        });

        quadradoC4.setEditable(false);
        quadradoC4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoC4.setToolTipText("");
        quadradoC4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoC4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoC4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoC4MouseClicked(evt);
            }
        });

        quadradoI8.setEditable(false);
        quadradoI8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoI8.setToolTipText("");
        quadradoI8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoI8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoI8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoI8MouseClicked(evt);
            }
        });

        quadradoC8.setEditable(false);
        quadradoC8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoC8.setToolTipText("");
        quadradoC8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoC8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoC8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoC8MouseClicked(evt);
            }
        });

        quadradoC9.setEditable(false);
        quadradoC9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoC9.setToolTipText("");
        quadradoC9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoC9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoC9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoC9MouseClicked(evt);
            }
        });

        quadradoI9.setEditable(false);
        quadradoI9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoI9.setToolTipText("");
        quadradoI9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoI9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoI9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoI9MouseClicked(evt);
            }
        });

        quadradoI7.setEditable(false);
        quadradoI7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoI7.setToolTipText("");
        quadradoI7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoI7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoI7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoI7MouseClicked(evt);
            }
        });

        quadradoC7.setEditable(false);
        quadradoC7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quadradoC7.setToolTipText("");
        quadradoC7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quadradoC7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quadradoC7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadradoC7MouseClicked(evt);
            }
        });

        numeroUsuario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        numeroUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(150, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(quadradoG7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quadradoG8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(quadradoG4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(quadradoG5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(quadradoG1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(quadradoG2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(quadradoG9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(quadradoG6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(quadradoG3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(quadradoD7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(quadradoD8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quadradoD4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(quadradoD5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quadradoD1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(quadradoD2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(quadradoD9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quadradoD6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoD3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(quadradoA7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(quadradoA8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quadradoA4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(quadradoA5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quadradoA1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(quadradoA2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(quadradoA9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quadradoA6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoA3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(quadradoH7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quadradoH8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(quadradoH4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(quadradoH5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(quadradoH1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(quadradoH2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(quadradoH9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(quadradoH6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(quadradoH3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(quadradoE7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(quadradoE8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quadradoE4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(quadradoE5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quadradoE1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(quadradoE2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(quadradoE9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quadradoE6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoE3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(quadradoB7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(quadradoB8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quadradoB4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(quadradoB5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quadradoB1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(quadradoB2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(quadradoB9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quadradoB6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoB3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(quadradoI7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quadradoI8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(quadradoI4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(quadradoI5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(quadradoI1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(quadradoI2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(quadradoI9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(quadradoI6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(quadradoI3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(quadradoF7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(quadradoF8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quadradoF4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(quadradoF5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quadradoF1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(quadradoF2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(quadradoF9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quadradoF6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoF3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(quadradoC7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(quadradoC8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quadradoC4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(quadradoC5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quadradoC1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(quadradoC2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(quadradoC9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quadradoC6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoC3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(381, 381, 381))
            .addGroup(layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(numeroUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(numeroUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoA2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoA3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoA1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoA5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoA6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoA4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoA8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoA9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoA7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoD2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoD3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoD1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoD5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoD6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoD4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoD8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoD9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoD7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoG2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoG3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoG1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoG5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoG6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoG4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoG8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoG9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoG7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoC2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoC3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoC1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoC5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoC6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoC4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoC8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoC9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoC7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoF2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoF3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoF1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoF5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoF6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoF4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoF8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoF9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoF7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoB2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoB3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoB1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoB5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoB6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoB4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoB8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoB9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoB7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoE2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoE3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoE1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoE5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoE6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoE4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quadradoE8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoE9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadradoE7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quadradoI2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoI3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoI1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quadradoI5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoI6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoI4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quadradoI8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoI9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoI7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quadradoH2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoH3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoH1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quadradoH5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoH6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoH4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quadradoH8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoH9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quadradoH7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(134, 134, 134))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void quadradoA1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_quadradoA1InputMethodTextChanged
        // TODO add your handling code here:
        System.out.println(evt);
        int n = 1-'0';
        if (!Character.isDigit(1) || n < 1 || n > 9) {
            evt.consume();
            quadradoA1.setBackground(new java.awt.Color(255, 0, 0));
            System.out.println(1);
        } else{
            quadradoA1.setBackground(new java.awt.Color(0, 255, 0));
        }
    }//GEN-LAST:event_quadradoA1InputMethodTextChanged

    private void quadradoA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quadradoA1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quadradoA1ActionPerformed

    private void numeroUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroUsuarioActionPerformed

    private void quadradoA1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoA1MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoA1.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
        
    }//GEN-LAST:event_quadradoA1MouseClicked

    private void quadradoA2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoA2MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoA2.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoA2MouseClicked

    private void quadradoA4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoA4MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoA4.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoA4MouseClicked

    private void quadradoA3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoA3MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoA3.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoA3MouseClicked

    private void quadradoA5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoA5MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoA5.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoA5MouseClicked

    private void quadradoA6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoA6MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoA6.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoA6MouseClicked

    private void quadradoA7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoA7MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoA7.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoA7MouseClicked

    private void quadradoA8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoA8MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoA8.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoA8MouseClicked

    private void quadradoA9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoA9MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoA9.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoA9MouseClicked

    private void quadradoB1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoB1MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoB1.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoB1MouseClicked

    private void quadradoB2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoB2MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoB2.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoB2MouseClicked

    private void quadradoB3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoB3MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoB3.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoB3MouseClicked

    private void quadradoB4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoB4MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoB4.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoB4MouseClicked

    private void quadradoB5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoB5MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoB5.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoB5MouseClicked

    private void quadradoB6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoB6MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoB6.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoB6MouseClicked

    private void quadradoB7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoB7MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoB7.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoB7MouseClicked

    private void quadradoB8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoB8MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoB8.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoB8MouseClicked

    private void quadradoB9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoB9MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoB9.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoB9MouseClicked

    private void quadradoC1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoC1MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoC1.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoC1MouseClicked

    private void quadradoC2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoC2MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoC2.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoC2MouseClicked

    private void quadradoC3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoC3MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoC3.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoC3MouseClicked

    private void quadradoC4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoC4MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoC4.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoC4MouseClicked

    private void quadradoC5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoC5MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoC5.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoC5MouseClicked

    private void quadradoC6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoC6MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoC6.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoC6MouseClicked

    private void quadradoC7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoC7MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoC7.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoC7MouseClicked

    private void quadradoC8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoC8MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoC8.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoC8MouseClicked

    private void quadradoC9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoC9MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoC9.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoC9MouseClicked

    private void quadradoD1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoD1MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoD1.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoD1MouseClicked

    private void quadradoD2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoD2MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoD2.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoD2MouseClicked

    private void quadradoD3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoD3MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoD3.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoD3MouseClicked

    private void quadradoD4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoD4MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoD4.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoD4MouseClicked

    private void quadradoD5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoD5MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoD5.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoD5MouseClicked

    private void quadradoD6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoD6MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoD6.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoD6MouseClicked

    private void quadradoD7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoD7MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoD7.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoD7MouseClicked

    private void quadradoD8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoD8MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoD8.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoD8MouseClicked

    private void quadradoD9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoD9MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoD9.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoD9MouseClicked

    private void quadradoE1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoE1MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoE1.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoE1MouseClicked

    private void quadradoE2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoE2MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoE2.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoE2MouseClicked

    private void quadradoE3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoE3MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoE3.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoE3MouseClicked

    private void quadradoE4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoE4MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoE4.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoE4MouseClicked

    private void quadradoE5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoE5MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoE5.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoE5MouseClicked

    private void quadradoE6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoE6MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoE6.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoE6MouseClicked

    private void quadradoE7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoE7MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoE7.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoE7MouseClicked

    private void quadradoE8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoE8MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoE8.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoE8MouseClicked

    private void quadradoE9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoE9MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoE9.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoE9MouseClicked

    private void quadradoF1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoF1MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoF1.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoF1MouseClicked

    private void quadradoF2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoF2MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoF2.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoF2MouseClicked

    private void quadradoF3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoF3MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoF3.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoF3MouseClicked

    private void quadradoF4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoF4MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoF4.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoF4MouseClicked

    private void quadradoF5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoF5MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoF5.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoF5MouseClicked

    private void quadradoF6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoF6MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoF6.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoF6MouseClicked

    private void quadradoF7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoF7MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoF7.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoF7MouseClicked

    private void quadradoF8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoF8MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoF8.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoF8MouseClicked

    private void quadradoF9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoF9MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoF9.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoF9MouseClicked

    private void quadradoG1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoG1MouseClicked
        // TODO add your handling code here:
         String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoG1.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoG1MouseClicked

    private void quadradoG2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoG2MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoG2.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoG2MouseClicked

    private void quadradoG3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoG3MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoG3.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoG3MouseClicked

    private void quadradoG4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoG4MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoG4.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoG4MouseClicked

    private void quadradoG5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoG5MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoG5.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoG5MouseClicked

    private void quadradoG6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoG6MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoG6.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoG6MouseClicked

    private void quadradoG8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoG8MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoG8.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoG8MouseClicked

    private void quadradoG9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoG9MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoG9.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoG9MouseClicked

    private void quadradoG7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoG7MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoG7.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoG7MouseClicked

    private void quadradoH1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoH1MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoH1.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoH1MouseClicked

    private void quadradoH2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoH2MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoH2.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoH2MouseClicked

    private void quadradoH3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoH3MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoH3.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoH3MouseClicked

    private void quadradoH4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoH4MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoH4.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoH4MouseClicked

    private void quadradoH5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoH5MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoH5.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoH5MouseClicked

    private void quadradoH6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoH6MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoH6.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoH6MouseClicked

    private void quadradoH7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoH7MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoH7.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoH7MouseClicked

    private void quadradoH8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoH8MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoH8.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoH8MouseClicked

    private void quadradoH9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoH9MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoH9.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoH9MouseClicked

    private void quadradoI1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoI1MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoI1.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoI1MouseClicked

    private void quadradoI2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoI2MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoI2.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoI2MouseClicked

    private void quadradoI3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoI3MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoI3.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoI3MouseClicked

    private void quadradoI4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoI4MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoI4.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoI4MouseClicked

    private void quadradoI5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoI5MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoI5.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoI5MouseClicked

    private void quadradoI6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoI6MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoI6.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoI6MouseClicked

    private void quadradoI7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoI7MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoI7.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoI7MouseClicked

    private void quadradoI9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoI9MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoI9.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoI9MouseClicked

    private void quadradoI8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadradoI8MouseClicked
        // TODO add your handling code here:
        String numeroString = numeroUsuario.getText();
        try {
            int numero = Integer.parseInt(numeroString);
            if(verificar(numero)){
                quadradoI8.setText(numeroString);
            }else{
                JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro: Digite apenas numeros de 1 a 9");
        }
    }//GEN-LAST:event_quadradoI8MouseClicked
   
    private boolean verificar(int numero){
       if(numero>0 && numero <10){
           return true;
       }
       return false;
   }
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField numeroUsuario;
    private javax.swing.JTextField quadradoA1;
    private javax.swing.JTextField quadradoA2;
    private javax.swing.JTextField quadradoA3;
    private javax.swing.JTextField quadradoA4;
    private javax.swing.JTextField quadradoA5;
    private javax.swing.JTextField quadradoA6;
    private javax.swing.JTextField quadradoA7;
    private javax.swing.JTextField quadradoA8;
    private javax.swing.JTextField quadradoA9;
    private javax.swing.JTextField quadradoB1;
    private javax.swing.JTextField quadradoB2;
    private javax.swing.JTextField quadradoB3;
    private javax.swing.JTextField quadradoB4;
    private javax.swing.JTextField quadradoB5;
    private javax.swing.JTextField quadradoB6;
    private javax.swing.JTextField quadradoB7;
    private javax.swing.JTextField quadradoB8;
    private javax.swing.JTextField quadradoB9;
    private javax.swing.JTextField quadradoC1;
    private javax.swing.JTextField quadradoC2;
    private javax.swing.JTextField quadradoC3;
    private javax.swing.JTextField quadradoC4;
    private javax.swing.JTextField quadradoC5;
    private javax.swing.JTextField quadradoC6;
    private javax.swing.JTextField quadradoC7;
    private javax.swing.JTextField quadradoC8;
    private javax.swing.JTextField quadradoC9;
    private javax.swing.JTextField quadradoD1;
    private javax.swing.JTextField quadradoD2;
    private javax.swing.JTextField quadradoD3;
    private javax.swing.JTextField quadradoD4;
    private javax.swing.JTextField quadradoD5;
    private javax.swing.JTextField quadradoD6;
    private javax.swing.JTextField quadradoD7;
    private javax.swing.JTextField quadradoD8;
    private javax.swing.JTextField quadradoD9;
    private javax.swing.JTextField quadradoE1;
    private javax.swing.JTextField quadradoE2;
    private javax.swing.JTextField quadradoE3;
    private javax.swing.JTextField quadradoE4;
    private javax.swing.JTextField quadradoE5;
    private javax.swing.JTextField quadradoE6;
    private javax.swing.JTextField quadradoE7;
    private javax.swing.JTextField quadradoE8;
    private javax.swing.JTextField quadradoE9;
    private javax.swing.JTextField quadradoF1;
    private javax.swing.JTextField quadradoF2;
    private javax.swing.JTextField quadradoF3;
    private javax.swing.JTextField quadradoF4;
    private javax.swing.JTextField quadradoF5;
    private javax.swing.JTextField quadradoF6;
    private javax.swing.JTextField quadradoF7;
    private javax.swing.JTextField quadradoF8;
    private javax.swing.JTextField quadradoF9;
    private javax.swing.JTextField quadradoG1;
    private javax.swing.JTextField quadradoG2;
    private javax.swing.JTextField quadradoG3;
    private javax.swing.JTextField quadradoG4;
    private javax.swing.JTextField quadradoG5;
    private javax.swing.JTextField quadradoG6;
    private javax.swing.JTextField quadradoG7;
    private javax.swing.JTextField quadradoG8;
    private javax.swing.JTextField quadradoG9;
    private javax.swing.JTextField quadradoH1;
    private javax.swing.JTextField quadradoH2;
    private javax.swing.JTextField quadradoH3;
    private javax.swing.JTextField quadradoH4;
    private javax.swing.JTextField quadradoH5;
    private javax.swing.JTextField quadradoH6;
    private javax.swing.JTextField quadradoH7;
    private javax.swing.JTextField quadradoH8;
    private javax.swing.JTextField quadradoH9;
    private javax.swing.JTextField quadradoI1;
    private javax.swing.JTextField quadradoI2;
    private javax.swing.JTextField quadradoI3;
    private javax.swing.JTextField quadradoI4;
    private javax.swing.JTextField quadradoI5;
    private javax.swing.JTextField quadradoI6;
    private javax.swing.JTextField quadradoI7;
    private javax.swing.JTextField quadradoI8;
    private javax.swing.JTextField quadradoI9;
    // End of variables declaration//GEN-END:variables
}
